<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model as EloquentModel;
use Illuminate\Support\Facades\DB;

class Model extends EloquentModel
{


	public function __construct(array $attributes = []) {
		parent::__construct($attributes);

		if (is_null($this->id)) {
			$this->loadDefaultValues();
		}
	}

	protected $_schema = [];

	/**
	 * Loads default values from database table schema.
	 *
	 * You may call this method to load default values after creating a new instance:
	 *
	 * ```php
	 * // class Customer extends Illuminate\Database\Eloquent\Model
	 * $customer = new Customer();
	 * $customer->loadDefaultValues();
	 * ```
	 *
	 * @param bool $skipIfSet whether existing value should be preserved.
	 * This will only set defaults for attributes that are `null`.
	 * @return $this the model instance itself.
	 */
	public function loadDefaultValues($skipIfSet = true)
	{
		$aColumns = $this->getConnection()->getSchemaBuilder()->getColumns($this->getTable());

		$this->_schema = $aColumns;

		foreach ($aColumns as $aColumn) {
			if (in_array($aColumn['name'], $this->hidden)) {
				continue;
			}

			if ($aColumn['default'] === null) {
				$this->{$aColumn['name']} = '';
				continue;
			}
			$aColumn['default'] != 'CURRENT_TIMESTAMP'
			&& $aColumn['default'] != 'now()'
			&& $aColumn['default'] != 'LOCALTIME'
			&& $aColumn['default'] != 'localtime()'
			&& $aColumn['default'] != 'LOCALTIMESTAMP'
			&& $aColumn['default'] != 'localtimestamp()'
			&& $aColumn['default'] != 'current_timestamp()' // MariaDB
			&& $this->{$aColumn['name']} = trim($aColumn['default'], "'");
		}
		return $this;
	}

	public function toArray() {
		foreach ($this->_schema as $aColumn) {
			switch($aColumn['type_name']) {
				case 'int': {
					$this->{$aColumn['name']} = (int)$this->{$aColumn['name']};
					break;
				}
				default: {
					$this->{$aColumn['name']} = (string)$this->{$aColumn['name']};
				}
			}
		}
		$aReturn = parent::toArray(); // TODO: Change the autogenerated stub

		return $aReturn;
	}
}
